@using CodeKicker.BBCode
@using Microsoft.AspNet.Identity
@model Athenaeum.ViewModels.Event.EventDetailsViewModel
@{
    ViewBag.Title = Model.Event.Title;
}

<div class="breadcrumbs">
    <div class="container">
        <h1 class="pull-left">Upcoming Events</h1>
        <ul class="pull-right breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            @if (Model.Event.EndDate > DateTime.Now)
            {
                <li>@Html.ActionLink("Upcoming Events", "Index", "Event")</li>
            }
            else
            {
                <li>@Html.ActionLink("Event Archive", "Archive", "Event")</li>
            }
            
            <li class="active">@Model.Event.Title</li>
        </ul>
    </div>
</div><!--/breadcrumbs-->

<div class="container content blog-full-width">
    @if (User.Identity.GetUserName() == Model.Event.Author.UserName || User.IsInRole("admin"))
    {

            <!-- Single button -->
        <div class="btn-group pull-right">
            <button type="button" class="btn-u btn-u-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i> <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li>@Html.ActionLink("Edit", "Edit", "Event", new { id = Model.Event.EventId }, null)</li>
                <li><a href="#" data-toggle="modal" data-target="#deleteModal">Delete</a></li>
            </ul>
        </div>
        
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel"><i class="fa fa-warning"></i> Warning!</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete <strong>@Model.Event.Title</strong>? This action cannot be undone.
                </div>
                  <div class="modal-footer text-right">
                        @Html.ActionLink("Delete", "Delete", "Event", new { id = Model.Event.EventId }, new {@class = "btn-u"})
                      <button type="button" class="btn-u btn-u-default" data-dismiss="modal">Cancel</button>
                  </div>
            </div>
          </div>
        </div>
    }
    <!--Blog Post-->
    <div class="blog margin-bottom-40">
        <div class="blog-img">
            <img class="img-responsive" src="@Model.Event.ImageUrl" alt="">
        </div>
        <h2>@Model.Event.Title</h2>
        
        <div class="row">
            <div class="col-md-9 col-sm-12">
                <div class="blog-post-tags">
                    <ul class="list-unstyled list-inline blog-info">
                        <li><i class="fa fa-calendar"></i> @Model.Event.StartDate.ToString("MMMM dd, yyyy") - @Model.Event.EndDate.ToString("MMMM dd, yyyy")</li>
                        <li><i class="fa fa-pencil"></i> @Html.ActionLink(Model.Event.Author.UserName, "Profile", "Account", new { username = Model.Event.Author.UserName }, null)</li>
                        <li><i class="fa fa-globe"></i> @Model.Event.Faction</li>
                    </ul>
                </div>
                <p>
                    @Model.Event.Introduction
                </p>
                <hr />
                <p>
                    @Html.Raw(BBCode.ToHtml(Model.Event.Description))
                </p>
            </div>
            <div class="col-md-3 col-sm-12">
                <div class="headline margin-bottom-20"><h2>Players</h2></div>
                <ul class="list-unstyled">
                    @foreach(var player in Model.Event.Attendees.OrderByDescending(x => x.Status))
                    {
                        <li>
                            <a href="#">@player.User.UserName</a>
                            @if(player.Status == 1)
                            {
                                <small class="text-success"> Accepted</small>
                            }
                            else
                            {
                                <small class="text-warning"> Tentative</small>
                            }
                        </li>
                    }
                    @if(Model.Event.Attendees.Count == 0)
                    {
                        <p>Nobody has RSVP'd for this event yet.</p>
                    }
                </ul>
                @if (Request.IsAuthenticated)
                {
                    <h4>Are you attending?</h4>
                    <div class="btn-group" style="width:100%;">
                        @if (Model.CurrentUserStatus == 1)
                        {
                            <a href="@Url.Action("SetStatus", "Event", new { eventId = Model.Event.EventId, status = 1 })" class="col-xs-4 btn btn-success active">Yes</a>
                        }
                        else
                        {
                            <a href="@Url.Action("SetStatus", "Event", new { eventId = Model.Event.EventId, status = 1 })" class="col-xs-4 btn btn-success">Yes</a>
                        }
                        
                        @if (Model.CurrentUserStatus == 0)
                        {
                            <a href="@Url.Action("SetStatus", "Event", new { eventId = Model.Event.EventId, status = 0 })" class="col-xs-4 btn btn-warning active">Maybe</a>
                        }
                        else
                        {
                            <a href="@Url.Action("SetStatus", "Event", new { eventId = Model.Event.EventId, status = 0 })" class="col-xs-4 btn btn-warning">Maybe</a>
                        }
                        
                        @if (Model.CurrentUserStatus == 2)
                        {
                            <a href="@Url.Action("SetStatus", "Event", new { eventId = Model.Event.EventId, status = 2 })" class="col-xs-4 btn btn-danger active">No</a>
                        }
                        else
                        {
                            <a href="@Url.Action("SetStatus", "Event", new { eventId = Model.Event.EventId, status = 2 })" class="col-xs-4 btn btn-danger">No</a>
                        }
                    </div>
                    if (Model.CurrentUserStatus == 2)
                    {
                        <p>Your current response is <span class="text-danger font-bold">No</span>.</p>
                    }
                    else if (Model.CurrentUserStatus == 1)
                    {
                        <p>Your current response is <span class="text-success font-bold">Yes</span>.</p>
                    }
                    else
                    {
                        <p>Your current response is <span class="text-warning font-bold">Maybe</span>.</p>
                    }
                }
                else
                {
                    <h4>@Html.ActionLink("Login", "Login", "Account") to RSVP</h4>
                }

            </div>
        </div>
    </div>
    <!--End Blog Post-->
    
    <!-- COMMENT SECTION -->
    <!-- End News v3 -->
    <h2 class="margin-bottom-20">Comments <span id="commentsLoading" class="hidden"><i class="fa fa-spin fa-spinner"></i></span><span class="hidden" id="commentCount"></span></h2>
    <!-- Blog Comments -->
    <div id="commentSection">

    </div>
    <!-- End Blog Comments -->
    @if (Request.IsAuthenticated)
    {
        <h2 class="margin-bottom-20">Post a Comment</h2>
        <!-- Form -->
        <div id="sky-form3" class="sky-form comment-style">
            <fieldset>
                <div class="sky-space-30">
                    <div>
                        <textarea rows="8" id="commentMessage" name="message" id="message" placeholder="Write comment here ..." class="form-control"></textarea>
                    </div>
                </div>

                <p>
                    <button type="button" id="commentSubmit" class="btn-u">Submit</button>
                </p>
            </fieldset>
        </div>
        <!-- End Form -->
    }
    else
    {
        <h2 class="margin-bottom-20">@Html.ActionLink("Login", "Login", "Account") to Post a Comment</h2>
        <!-- Form -->
        <form action="" id="sky-form3" class="sky-form comment-style">
            <fieldset>
                <div class="sky-space-30">
                    <div>
                        <textarea rows="8" name="message" id="message" placeholder="Write comment here ..." class="form-control disabled" readonly></textarea>
                    </div>
                </div>

                <p>
                    <button type="button" class="btn-u disabled">Submit</button>
                </p>
            </fieldset>
        </form>
        <!-- End Form -->
    }
</div>

@section Scripts
{
    <script>
    function loadComments() {
        var id = @Model.Event.EventId;

            $("#commentsLoading").removeClass("hidden");
            console.log("Loading comments");
            $.getJSON("../loadcomments", { id: id })
                .done(function(data) {
                    $("#commentCount").html("(" + data.length + ")");

                    $("#commentCount").removeClass("hidden");

                    $("#commentSection").html("");

                    $.each(data, function(index, value) {
                        @{ var canDelete = User.IsInRole("moderator") || User.IsInRole("admin");}
                        var canDelete = "@canDelete" == "True";
                        
                        if (canDelete) {
                            var newHtml = '<div class="row blog-comments margin-bottom-30"><div class="col-sm-2 sm-margin-bottom-40"><img src="' + value.ImageUrl + '" alt=""></div><div class="col-sm-10"><div class="comments-itself-light"><h4><a href="../../Account/Profile?username=' + value.Author + '">' + value.Author + '</a><small class="pull-right"> <a title="Delete Comment" href="../../Home/DeleteComment/' + value.CommentId + '"><i class="fa fa-trash"></i></a></small></h4><p>' + value.Body + '</p></div></div></div>';
                        } else {
                            var newHtml = '<div class="row blog-comments margin-bottom-30"><div class="col-sm-2 sm-margin-bottom-40"><img src="' + value.ImageUrl + '" alt=""></div><div class="col-sm-10"><div class="comments-itself-light"><h4><a href="../../Account/Profile?username=' + value.Author + '">' + value.Author + '</a></h4><p>' + value.Body + '</p></div></div></div>';
                        }
                        $("#commentSection").html($("#commentSection").html() + newHtml);

                    });

                    if (data.length == 0) {
                        $("#commentSection").html("<p>There are no comments here yet.</p>");
                    }
                })
                .fail(function() {
                    toastr.error("Failed to load comments.");
                })
                .always(function() {
                    $("#commentsLoading").addClass("hidden");
                });
        }

        $(document).ready(function() {
            loadComments();

            $("#commentSubmit").click(function() {
                var body = $("#commentMessage").val();
                var id = @Model.Event.EventId;

                if (body == "") {
                    toastr.error("You have to input something into the comment box.");
                } else {
                    $.post("../addcomment", { body: body, id: id })
                     .done(function(result) {
                         $("#commentMessage").val("");
                         loadComments();
                     })
                     .fail(function() {
                         toastr.error("Failed to post comment.");
                     });
                }
            })
        })
    </script>
}